import logging
import requests
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from aiogram.types import InputFile

from keyboard_bot import kb, ikb

API_TOKEN = "5975881093:AAFdTKi8rdjSw4Pl5xP0leyR4KE2CjAL_oA"

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


HELP_COMMAND = """
<b>/start</b> - <em>–∫–æ–º–∞–Ω–¥–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º</em>
<b>/records</b> - <em>–∫–æ–º–∞–Ω–¥–∞ –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è</em>
"""

START_COMMAND ="""
<em>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–∞–Ω–∏–∫—é—Ä!\n
–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –ø–æ–º–æ–≥—É—Ç –∫–Ω–æ–ø–æ—á–∫–∏ —Å–Ω–∏–∑—É. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ,—Ç–æ —Å—Ö–æ–¥–∏—Ç–µ –∫ –≤—Ä–∞—á... —Ç—ã–∫–Ω–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü–æ–º–æ—â—å‚ùì'</em>
"""

PHOTO_WORK = ["./static/work1.jpg",
              "./static/work2.jpg",
              "./static/work3.jpg",
              "./static/work5.jpg",
              "./static/work6.jpg",
              "./static/work7.jpg",
              "./static/work8.jpg",
              "./static/work9.jpg"]

@dp.message_handler(Text(equals="–ü–æ–º–æ—â—å‚ùì"))
async def help_command(message: types.Message):
    await message.answer(text=HELP_COMMAND, parse_mode="HTML", reply_markup=kb)
    await message.delete()

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer(text=START_COMMAND,
                         parse_mode="HTML",
                         reply_markup=kb)
    await bot.send_photo(chat_id=message.chat.id,
                         photo="https://1.bp.blogspot.com/-oQ6R93ygb-Y/WJ36LeoBv0I/AAAAAAAAC7I/p7YCT5aK2mk-LG6z17Y2Ko2UvkX5dI1EwCLcB/s1600/42235076_l.jpg")
    # await bot.send_sticker(chat_id=message.chat.id,
    #                        sticker="CAACAgIAAxkBAAEIvzVkSi-6P9QwhSzexnl7Hv9zRBPdMAACCAADwDZPE29sJgveGptpLwQ")
    await message.delete()

@dp.message_handler(Text(equals="–ó–∞–ø–∏—Å–∏‚úçÔ∏è"))
async def records_command(message: types.Message):
    response = requests.get(url='http://127.0.0.1:8000/api/v1/recordlist/').json()
    for record in response:
        await message.answer(f"–î–∞—Ç–∞: {record['date']}\n–í—Ä–µ–º—è: {record['time']}",
                             parse_mode="HTML",
                             reply_markup=ikb)
    await message.delete()

@dp.message_handler(Text(equals="–ü—Ä–∞–π—ÅüíÖ"))
async def price_command(message: types.Message):
    photo = open("./static/price.jpg", "rb")
    await bot.send_photo(chat_id=message.chat.id,
                         photo=photo)
    await message.delete()

@dp.message_handler(Text(equals="–ú–æ–∏ —Ä–∞–±–æ—Ç—ã‚ù§Ô∏è"))
async def price_command(message: types.Message):
    for photo in PHOTO_WORK:
        photo_open = open(photo, "rb")
        await bot.send_photo(chat_id=message.chat.id,
                         photo=photo_open)
    await message.delete()

# @dp.message_handler(Text(equals='–í–µ–± –≤–µ—Ä—Å–∏—è'))
# async def web_version(message: types.Message):
#     await message.answer('–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É –∞–¥—Ä–µ—Å—É: http://127.0.0.1:8000/',
#                          reply_markup=kb)


if __name__ == '__main__':
    executor.start_polling(dp)
